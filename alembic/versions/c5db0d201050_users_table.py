"""users table

Revision ID: c5db0d201050
Revises:
Create Date: 2021-06-20 06:11:57.069561

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op


# revision identifiers, used by Alembic.
revision = "c5db0d201050"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", postgresql.UUID(), nullable=False),
        sa.Column("created_ts", sa.DateTime(), nullable=False),
        sa.Column("modified_ts", sa.DateTime(), nullable=False),
        sa.Column("full_name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.CheckConstraint(
            (
                "(is_admin = TRUE AND is_superuser = TRUE) "
                + "OR (is_admin = TRUE AND is_superuser = FALSE) "
                + "OR (is_admin = FALSE AND is_superuser = FALSE)"
            ),
            name="check_users_is_admin_and_is_superuser",
        ),
        sa.PrimaryKeyConstraint("id", name="primary"),
    )
    op.create_index("ix_users_is_admin", "users", ["is_admin"], unique=False)
    op.create_index("ix_users_is_superuser", "users", ["is_superuser"], unique=False)
    op.create_index("uix_users_email", "users", ["email"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("uix_users_email", table_name="users")
    op.drop_index("ix_users_is_superuser", table_name="users")
    op.drop_index("ix_users_is_admin", table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
